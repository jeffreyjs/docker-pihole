x-common: &common-settings
  logging:
    driver: json-file
    options:
      max-size: 100m
      max-file: "3"
  networks:
    - dns
  platform: linux/amd64
  restart: unless-stopped
networks:
  dns:
    name: dns
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/24
services:
  cfssl:
    build:
      context: .
      dockerfile: Dockerfile
      tags:
        - cfssl
    container_name: cfssl
    command: serve -address=0.0.0.0 -config=config/config.json
    healthcheck:
      test: curl --fail http://localhost:8888 || exit 1
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    volumes:
      - ${PWD}/etc/cfssl:/etc/cfssl:rw
  cloudflared:
    container_name: cloudflared
    command: proxy-dns
    environment:
      - TUNNEL_DNS_ADDRESS=0.0.0.0
      - TUNNEL_DNS_PORT=9053
      - TUNNEL_DNS_UPSTREAM=https://1.1.1.1/dns-query,https://1.0.0.1/dns-query
    expose:
      - 9053
    # TODO: Add working healthcheck
    # healthcheck:
    #   test: ["CMD-SHELL", "curl -f http://localhost:3333/metrics || exit 1"]
    #   interval: 1m30s
    #   timeout: 30s
    #   retries: 5
    #   start_period: 30s
    hostname: cloudflared
    image: cloudflare/cloudflared:${TAG_CLOUDFLARED:-latest}
    networks:
      dns:
        ipv4_address: 172.20.0.250
    logging:
      driver: json-file
      options:
        max-size: 100m
        max-file: "3"
    platform: linux/amd64
    restart: unless-stopped
  pihole:
    container_name: pihole
    dns:
      - 127.0.0.1
      - 1.1.1.1
    environment:
      - CORS_HOSTS=pihole.${DOMAIN:-local}
      - DNSMASQ_LISTENING=all
      - FTL_CMD_RATE_LIMIT=0/0
      - PIHOLE_DNS_=172.20.0.254#9053
      - WEBPASSWORD=${WEBPASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "dig @127.0.0.1 pi.hole || exit 1"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    hostname: pihole
    image: pihole/pihole:${TAG_PIHOLE:-latest}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pihole-web.entrypoints=web-secure"
      - "traefik.http.routers.pihole-web.tls.certresolver=resolver"
      - "traefik.http.middlewares.pihole-web.addprefix.prefix=/admin"
      - "traefik.http.services.pihole-web.loadbalancer.server.port=80"
      - "traefik.tcp.routers.pihole-tcp.entrypoints=dns-tcp"
      - "traefik.tcp.routers.pihole-tcp.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.pihole-tcp.service=pihole-tcp"
      - "traefik.tcp.services.pihole-tcp.loadbalancer.server.port=53"
      - "traefik.udp.routers.pihole-udp.entrypoints=dns-udp"
      - "traefik.udp.routers.pihole-udp.service=pihole-udp"
      - "traefik.udp.services.pihole-udp.loadbalancer.server.port=53"
    <<: *common-settings
    volumes:
      - ${PWD}/pihole/volume:/etc/pihole:rw
  traefik:
    container_name: traefik
    environment:
      DOMAIN: ${DOMAIN:-local}
    healthcheck:
      test: ["CMD", "traefik", "healthcheck"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    image: traefik:${TAG_TRAEFIK:-latest}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.entrypoints=web-secure"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.tls.certresolver=resolver"
    <<: *common-settings
    security_opt:
      - no-new-privileges:true
    stdin_open: true
    tty: true
    # ports:
    #   - mode: host
    #     published: 80
    #     protocol: tcp
    #     target: 80
    #   - mode: host
    #     published: 443
    #     protocol: tcp
    #     target: 443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/localtime:/etc/localtime:ro
      - ${PWD}/traefik/config/traefik.yaml:/etc/traefik/traefik.yaml:ro
