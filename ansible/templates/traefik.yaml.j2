# {{ ansible_managed }}
---
api:
  dashboard: {{ enable_traefik_dashboard | default('false') }}
core:
  defaultRuleSyntax: v3
{% if use_letsencrypt %}
certificatesResolvers:
  resolver:
    acme:
      email: {% raw %}{{ env "EMAIL" }}{% endraw %}
      storage: /etc/traefik/config/letsencrypt/acme.json
      caServer: https://acme-v02.api.letsencrypt.org/directory
      dnsChallenge:
        provider: {{ challenge_provider | default('cloudflare') }}
        delayBeforeCheck: "300"
        resolvers:
{% for ns in upstream_dns %}
          - {{ ns }}:53
{% endfor %}
  httpchallenge:
    acme:
      email: {% raw %}{{ env "EMAIL" }}{% endraw %}
      storage: /etc/traefik/config/letsencrypt/acme.json
      httpChallenge:
        entryPoint: web
  tlschallenge:
    acme:
      caServer: https://acme-v02.api.letsencrypt.org/directory
      email: {% raw %}{{ env "EMAIL" }}{% endraw %}
      storage: /etc/traefik/config/letsencrypt/acme.json # chmod 600 this file on the host system
      tlsChallenge: {}
{% endif %} 
entryPoints:
{% if pihole_external_dns %}
  dns-tcp:
    address: :53/tcp
    proxyProtocol:
      trustedIPs:
        - 127.0.0.1
        - {{ docker_network.subnet }}
  dns-udp:
    address: :53/udp
{% endif %}
  web:
    address: :80
    http:
      redirections:
        entryPoint:
          to: web-secure
          scheme: https
  web-secure:
    address: :443
{% if wireguard_enabled %}
  wg-udp:
    address: :{{ docker_network.wireguard_port }}/udp
{% endif %}
global:
  checkNewVersion: true
  sendAnonymousUsage: false
log:
  level: INFO
ping: {}
providers:
  providersThrottleDuration: 2s
  docker:
    defaultRule:
{%- raw %}
      "Host(`{{ index .Labels \"com.docker.compose.service\"}}\
      .{{ env \"DOMAIN\" }}`)"
{% endraw %}
    endpoint: "unix:///var/run/docker.sock"
    exposedByDefault: false
    network: dns
    watch: true
  file:
    directory: /etc/traefik/dynamic
serversTransport:
  insecureSkipVerify: true
