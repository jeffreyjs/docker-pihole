---
- name: Setup Pi-hole
  hosts: localhost
  connection: local
  tasks:
    - name: Setup cfssl container
      tags:
        - cfssl
        - config
      block:
        - name: Create directory for cfssl config
          ansible.builtin.file:
            name: etc/cfssl/config
            state: directory
            mode: "0755"
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"
        - name: Create cfssl ca.json
          ansible.builtin.copy:
            content: "{{ cfssl_ca | to_nice_json }}"
            dest: etc/cfssl/config/ca.json
            mode: "0644"
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"
        - name: Create cfssl config.json
          ansible.builtin.copy:
            content: "{{ cfssl_config | to_nice_json }}"
            dest: etc/cfssl/config/config.json
            mode: "0644"
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"
        - name: Template cfssl certificate config files
          ansible.builtin.template:
            src: cfssl_service.json.j2
            dest: etc/cfssl/config/{{ service }}.json
            mode: "0644"
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"
          loop: "{{ cfssl_services }}"
          loop_control:
            loop_var: service
    - name: Generate cfssl certificates
      tags:
        - cfssl
        - certificates
      block:
        - name: Generate ca certificate
          ansible.builtin.shell:
            cmd: "docker compose run --rm \
              --entrypoint sh cfssl \
              -c \"cfssl genkey --initca /etc/cfssl/config/ca.json | cfssljson -bare ca\""
        - name: Generate service certificates
          ansible.builtin.shell:
            cmd: "docker compose run --rm --entrypoint sh cfssl \
              -c \"cfssl gencert -ca ca.pem -ca-key ca-key.pem \
              -config /etc/cfssl/config/config.json \
              -profile server /etc/cfssl/config/{{ service }}.json\""
          loop: "{{ cfssl_services }}"
          loop_control:
            loop_var: service
  vars:
    cfssl_services:
      - pihole
      - traefik
    cfssl_ca:
      CN: "{{ domain }}"
      key:
        algo: rsa
        size: 4096
      names:
        - C: US
          ST: UT
          L: Salt Lake City
          O: Example
    cfssl_config:
      signing:
        default:
          expiry: 8760h
      profiles:
        client:
          usages:
            - signing
            - key encipherment
            - client auth
          expiry: 8760h
        server:
          usages:
            - signing
            - key encipherment
            - client auth
            - server auth
          expiry: 8760h
    domain: example.net
    ansible_user: "{{ lookup('env', 'USER') }}"
